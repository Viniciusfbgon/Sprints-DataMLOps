stages:
  - build
  - test
  - deploy

variables:
  POSTGRES_DB: postgres
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: mysecretpassword

build:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  script:
    - docker build -t app-node:latest .

test:
  stage: test
  image: node:18
  services:
    - postgres:13
  variables:
    DB_HOST: postgres
    DB_USER: $POSTGRES_USER
    DB_PASSWORD: $POSTGRES_PASSWORD
    DB_DATABASE: $POSTGRES_DB
    APP_PORT: 3001
  before_script:
    - apt-get update && apt-get install -y postgresql-client curl
    - export PGPASSWORD=$DB_PASSWORD
    - |
      timeout 60 bash -c "until psql -h $DB_HOST -U $DB_USER -d $DB_DATABASE -c '\q'; do echo '⏳ Aguardando banco...'; sleep 2; done"
    - |
      psql -h $DB_HOST -U $DB_USER -d $DB_DATABASE -c "
        CREATE TABLE IF NOT EXISTS person (
          id SERIAL PRIMARY KEY,
          name TEXT NOT NULL,
          time TEXT
        );
      "
  script:
    - npm install
    - npm start > server.log 2>&1 &
    - sleep 10
    - cat server.log
    - |
      timeout 30 bash -c "until curl -s http://localhost:3001/getInfo; do echo '⏳ Esperando server...'; sleep 2; done"
    - |
      curl -X POST http://localhost:3001/create \
        -H "Content-Type: application/json" \
        -d '{"name":"test","hour":"12:00"}'
    - curl http://localhost:3001/getInfo

deploy:
  stage: deploy
  image: google/cloud-sdk:alpine
  script:
    - echo "$GCP_SERVICE_ACCOUNT_KEY" > /tmp/key.json
    - gcloud auth activate-service-account --key-file /tmp/key.json
    - gsutil cp -r public/* gs://$GCP_BUCKET_NAME/
  only:
    - main